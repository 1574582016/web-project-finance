<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.mapper.StockHandleDealDataMapper">
    <resultMap id="BaseResultMap" type="com.sky.model.StockHandleDealData">
        <id column="id" property="id"/>
        <result column="version" property="version"/>
        <result column="isvalid" property="isvalid"/>
        <result column="create_time" property="createTime"/>
        <result column="create_user" property="createUser"/>
        <result column="update_time" property="updateTime"/>
        <result column="update_user" property="updateUser"/>

        <result column="deal_period" property="dealPeriod"/>
        <result column="point_year" property="pointYear"/>
        <result column="point_month" property="pointMonth"/>
        <result column="point_week" property="pointWeek"/>
        <result column="point_day" property="pointDay"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="stock_code" property="stockCode"/>
        <result column="open_price" property="openPrice"/>
        <result column="close_price" property="closePrice"/>
        <result column="high_price" property="highPrice"/>
        <result column="low_price" property="lowPrice"/>
        <result column="deal_count" property="dealCount"/>
        <result column="deal_money" property="dealMoney"/>
        <result column="amplitude" property="amplitude"/>
        <result column="hand_rate" property="handRate"/>
    </resultMap>

    <select id="getGroupDealDataList" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        ${dealPeriod} deal_period ,
        a.point_year ,
        a.point_month ,
        a.point_week ,
        a.stock_code ,
        a.start_time ,
        a.end_time ,
        a.low_price ,
        a.high_price ,
        a.open_price ,
        a.deal_count ,
        a.deal_money ,
        a.amplitude ,
        a.hand_rate
        FROM(
        SELECT
        d.`stock_code` ,
        d.point_year,
        d.point_month,
        d.point_week ,
        MIN(d.deal_time) start_time ,
        MAX(d.deal_time) end_time ,
        MIN(d.`low_price`) low_price ,
        MAX(d.`high_price`) high_price ,
        CASE WHEN d.deal_time = MIN(d.deal_time) THEN d.open_price END AS open_price ,
        MAX(d.`high_price`) - MIN(d.`low_price`) amplitude ,
        SUM(d.deal_count) deal_count ,
        SUM(d.deal_money) deal_money ,
        SUM(d.hand_rate) hand_rate
        FROM stock_deal_data d
        WHERE d.deal_period = 1
        AND d.stock_code = #{stockCode}
        GROUP BY d.stock_code,
        d.point_year,
        <if test="dealPeriod == '2'.toString()">
            d.point_month,
            d.point_week
        </if>
        <if test="dealPeriod == '3'.toString()">
            d.point_month
        </if>
        ) a
        LEFT JOIN stock_handle_deal_data h ON a.stock_code = h.stock_code AND h.start_time = a.start_time  AND h.end_time = a.end_time AND h.deal_period = ${dealPeriod}
        WHERE h.id IS NULL
        ORDER BY a.start_time
    </select>

    <update id="updateHandleClosePrice" parameterType="java.lang.String">
        UPDATE stock_handle_deal_data h ,stock_deal_data d  SET h.`close_price` = d.`close_price`
        WHERE h.`stock_code` = d.`stock_code`
        AND h.`end_time` = d.deal_time
        AND h.`stock_code` = #{stockCode}
        AND d.deal_period = 1
        AND h.`close_price` = 0
    </update>

    <select id="getCalculateHandleDealMonthWeekList" parameterType="java.lang.String" resultType="com.sky.model.StockRiseRate">
        SELECT
        s.`stock_code` stockCode,
        ${dealPeriod} dealPeriod ,
        d.`point_year` pointYear,
        d.`point_month` pointMonth,
        <if test="startTime != null and startTime != '' and startTime != 'undefined'">
            #{startTime} startTime ,
        </if>
        <if test="endTime != null and endTime != '' and endTime != 'undefined'">
            #{endTime} endTime ,
        </if>
        <if test="dealPeriod == '2'.toString()">
            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 1  AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_week = 1  THEN 1 ELSE 0 END) * 100 ,2),0) oneRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 2  AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_week = 2  THEN 1 ELSE 0 END) * 100 ,2),0) towRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 3  AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_week = 3  THEN 1 ELSE 0 END) * 100 ,2),0) threeRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 4  AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_week = 4  THEN 1 ELSE 0 END) * 100 ,2),0) fourRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 5  AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_week = 5  THEN 1 ELSE 0 END) * 100 ,2),0) fiveRise ,

            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 1  THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_week = 1  THEN 1 ELSE 0 END) * 100 ,2),0) oneAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 2  THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_week = 2  THEN 1 ELSE 0 END) * 100 ,2),0) towAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 3  THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_week = 3  THEN 1 ELSE 0 END) * 100 ,2),0) threeAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 4  THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_week = 4  THEN 1 ELSE 0 END) * 100 ,2),0) fourAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 5  THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_week = 5  THEN 1 ELSE 0 END) * 100 ,2),0) fiveAmplitude ,

            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 1  THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_week = 1  THEN 1 ELSE 0 END) * 100 ,2),0) oneShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 2  THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_week = 2  THEN 1 ELSE 0 END) * 100 ,2),0) towShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 3  THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_week = 3  THEN 1 ELSE 0 END) * 100 ,2),0) threeShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 4  THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_week = 4  THEN 1 ELSE 0 END) * 100 ,2),0) fourShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_week = 5  THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_week = 5  THEN 1 ELSE 0 END) * 100 ,2),0) fiveShock
        </if>
        <if test="dealPeriod == '3'.toString()">
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 1  AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_month = 1  THEN 1 ELSE 0 END) * 100 ,2),0) oneRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 2  AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_month = 2  THEN 1 ELSE 0 END) * 100 ,2),0) towRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 3  AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_month = 3  THEN 1 ELSE 0 END) * 100 ,2),0) threeRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 4  AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_month = 4  THEN 1 ELSE 0 END) * 100 ,2),0) fourRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 5  AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_month = 5  THEN 1 ELSE 0 END) * 100 ,2),0) fiveRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 6  AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_month = 6  THEN 1 ELSE 0 END) * 100 ,2),0) sixRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 7  AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_month = 7  THEN 1 ELSE 0 END) * 100 ,2),0) sevenRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 8  AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_month = 8  THEN 1 ELSE 0 END) * 100 ,2),0) eightRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 9  AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_month = 9  THEN 1 ELSE 0 END) * 100 ,2),0) nineRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 10 AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_month = 10 THEN 1 ELSE 0 END) * 100 ,2),0) tenRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 11 AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_month = 11 THEN 1 ELSE 0 END) * 100 ,2),0) elevenRise ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 12 AND d.close_price - d.open_price > 0 THEN 1 ELSE 0 END) / SUM(CASE WHEN d.point_month = 12 THEN 1 ELSE 0 END) * 100 ,2),0) twelveRise ,

            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 1  THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 1  THEN 1 ELSE 0 END) * 100 ,2),0) oneAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 2  THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 2  THEN 1 ELSE 0 END) * 100 ,2),0) towAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 3  THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 3  THEN 1 ELSE 0 END) * 100 ,2),0) threeAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 4  THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 4  THEN 1 ELSE 0 END) * 100 ,2),0) fourAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 5  THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 5  THEN 1 ELSE 0 END) * 100 ,2),0) fiveAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 6  THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 6  THEN 1 ELSE 0 END) * 100 ,2),0) sixAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 7  THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 7  THEN 1 ELSE 0 END) * 100 ,2),0) sevenAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 8  THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 8  THEN 1 ELSE 0 END) * 100 ,2),0) eightAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 9  THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 9  THEN 1 ELSE 0 END) * 100 ,2),0) nineAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 10 THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 10 THEN 1 ELSE 0 END) * 100 ,2),0) tenAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 11 THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 11 THEN 1 ELSE 0 END) * 100 ,2),0) elevenAmplitude ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 12 THEN d.close_price - d.open_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 12 THEN 1 ELSE 0 END) * 100 ,2),0) twelveAmplitude ,

            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 1  THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 1  THEN 1 ELSE 0 END) * 100 ,2),0) oneShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 2  THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 2  THEN 1 ELSE 0 END) * 100 ,2),0) towShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 3  THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 3  THEN 1 ELSE 0 END) * 100 ,2),0) threeShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 4  THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 4  THEN 1 ELSE 0 END) * 100 ,2),0) fourShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 5  THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 5  THEN 1 ELSE 0 END) * 100 ,2),0) fiveShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 6  THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 6  THEN 1 ELSE 0 END) * 100 ,2),0) sixShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 7  THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 7  THEN 1 ELSE 0 END) * 100 ,2),0) sevenShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 8  THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 8  THEN 1 ELSE 0 END) * 100 ,2),0) eightShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 9  THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 9  THEN 1 ELSE 0 END) * 100 ,2),0) nineShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 10 THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 10 THEN 1 ELSE 0 END) * 100 ,2),0) tenShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 11 THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 11 THEN 1 ELSE 0 END) * 100 ,2),0) elevenShock ,
            IFNULL(ROUND(SUM(CASE WHEN d.point_month = 12 THEN d.high_price - d.close_price ELSE 0 END) / SUM(CASE WHEN d.point_month = 12 THEN 1 ELSE 0 END) * 100 ,2),0) twelveShock
        </if>
        FROM stock_company_sector s
        LEFT JOIN stock_handle_deal_data d ON s.`stock_code` = d.`stock_code`
        WHERE LEFT(s.`stock_code`,2) != '68'
        AND d.`deal_period` = #{dealPeriod}
        AND d.`start_time` >= SUBDATE(s.`publish_time`,INTERVAL -1 YEAR)
        <if test="startTime != null and startTime != '' and startTime != 'undefined'">
            AND d.`start_time` >= #{startTime}
        </if>
        <if test="endTime != null and endTime != '' and endTime != 'undefined'">
            AND d.`end_time` &lt;= #{endTime}
        </if>
        <if test="stockCode != null and stockCode != '' and stockCode != 'undefined'">
            AND d.`stock_code` =  #{stockCode}
        </if>
        GROUP BY d.`stock_code`
        <if test="dealPeriod == '2'.toString()">
            ,d.`point_month`
        </if>
    </select>
</mapper>