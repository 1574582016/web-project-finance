<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.mapper.StockProfitAvaregeRateMapper">
    <resultMap id="BaseResultMap" type="com.sky.model.StockProfitAvaregeRate">
        <id column="id" property="id"/>
        <result column="version" property="version"/>
        <result column="isvalid" property="isvalid"/>
        <result column="create_time" property="createTime"/>
        <result column="create_user" property="createUser"/>
        <result column="update_time" property="updateTime"/>
        <result column="update_user" property="updateUser"/>

        <result column="stock_code" property="stockCode"/>
        <result column="static_year" property="staticYear"/>
        <result column="publish_time" property="publishTime"/>
        <result column="space_year" property="spaceYear"/>
        <result column="average_grow_rate" property="averageGrowRate"/>
        <result column="average_grow_profit" property="averageGrowProfit"/>
    </resultMap>

    <select id="getStockProfitAvaregeRateList" parameterType="java.lang.String" resultType="com.sky.vo.StockProfitAvaregeRate_VO">
        SELECT
        s.`forth_sector` forthSector,
        av.`stock_code` stockCode,
        s.`stock_name` stockName,
        av.`publish_time` publishTime,
        av.space_year spaceYear,
        av.average_grow_rate averageGrowRate,
        SUM(1) investor ,
        s.`company_website` companyWebsite ,
        av.average_grow_profit averageGrowProfit,
        ir.`average_increase_rate` averageIncreaseRate,
        ir2.`total_increase_rate` totalIncreaseRate,
        ir2.`first_increase_rate` firstIncreaseRate,
        ir2.`second_increase_rate` secondIncreaseRate,
        ir2.`third_increase_rate` thirdIncreaseRate ,
        ir2.forth_increase_rate forthIncreaseRate
        FROM stock_profit_avarege_rate av
        LEFT JOIN stock_company_sector s ON av.`stock_code` = s.`stock_code`
        LEFT JOIN stock_profit_increase_rate ir  ON av.`stock_code` = ir.`stock_code`  AND ir.static_year = (DATE_FORMAT('2019-01-01' ,'%Y') - 1)
        LEFT JOIN stock_profit_increase_rate ir2 ON av.`stock_code` = ir2.`stock_code` AND ir2.static_year = DATE_FORMAT('2019-01-01' ,'%Y')
        LEFT JOIN stock_investor_product ip ON av.`stock_code` = ip.`stock_code` AND ip.`static_time` = (SELECT MIN(static_time) FROM stock_investor_product)
        WHERE av.average_grow_rate > 70
        AND ir.`average_increase_rate` > 1
        AND av.average_grow_profit > 1
        AND (ir2.`first_increase_rate` + ir2.`second_increase_rate` + ir2.`third_increase_rate` + ir2.`forth_increase_rate`) > 0
        AND LEFT(s.`stock_code`, 2) != 68
        <if test="yearType == '1'.toString()">
            AND av.space_year >= 10
        </if>
        <if test="yearType == '2'.toString()">
            AND av.space_year >= 5 AND av.space_year &lt; 10
        </if>
        <if test="yearType == '3'.toString()">
            AND av.space_year >= 3 AND av.space_year &lt; 5
        </if>
        <if test="yearType == '4'.toString()">
            AND av.space_year >= 2 AND av.space_year &lt; 3
        </if>
        <if test="firstSector != null and firstSector != '' and firstSector != 'undefined'">
            AND s.`first_sector` = #{firstSector}
        </if>
        <if test="secondSector != null and secondSector != '' and secondSector != 'undefined'">
            AND s.`second_sector` = #{secondSector}
        </if>
        <if test="thirdSecotor != null and thirdSecotor != '' and thirdSecotor != 'undefined'">
            AND s.`third_secotor` = #{thirdSecotor}
        </if>
        <if test="forthSector != null and forthSector != '' and forthSector != 'undefined'">
            AND s.`forth_sector` = #{forthSector}
        </if>
        <if test="stockCode != null and stockCode != '' and stockCode != 'undefined'">
            AND s.`stock_code` REGEXP #{stockCode}
        </if>
        <if test="stockName != null and stockName != '' and stockName != 'undefined'">
            AND s.`stock_name` REGEXP #{stockName}
        </if>
        AND (
        (CASE WHEN ir2.`first_increase_rate` > 0 THEN 1 ELSE 0 END ) +
        (CASE WHEN ir2.`second_increase_rate` > 0 THEN 1 ELSE 0 END ) +
        (CASE WHEN ir2.`third_increase_rate` > 0 THEN 1 ELSE 0 END ) +
        (CASE WHEN ir2.`forth_increase_rate` > 0 THEN 1 ELSE 0 END )
        ) > 1
--         AND ABS(ir.`average_increase_rate` - ir2.`total_increase_rate`) &lt; 10
        GROUP BY av.`stock_code`
        ORDER BY ROUND(av.average_grow_rate,0) DESC ,
        ROUND(ir.`average_increase_rate`,0) DESC
    </select>
</mapper>